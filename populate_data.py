
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import app, db
from models import Student, Class
from datetime import datetime

def populate_sample_data():
    with app.app_context():
        # Sample students data - 3 students per class
        sample_students = [
            # Class 1 Students
            {"name": "‡¶Ü‡¶π‡¶Æ‡ßá‡¶¶ ‡¶π‡¶æ‡¶∏‡¶æ‡¶®", "father_name": "‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶Ü‡¶≤‡ßÄ", "address": "‡ßß‡ß®‡ß© ‡¶™‡ßÅ‡¶∞‡¶æ‡¶® ‡¶¢‡¶æ‡¶ï‡¶æ", "district": "‡¶¢‡¶æ‡¶ï‡¶æ", "upazila": "‡¶≤‡¶æ‡¶≤‡¶¨‡¶æ‡¶ó", "mobile": "01711111001", "class_name": "Class 1", "id_number": "2025001"},
            {"name": "‡¶´‡¶æ‡¶§‡¶ø‡¶Æ‡¶æ ‡¶ñ‡¶æ‡¶§‡ßÅ‡¶®", "father_name": "‡¶Ü‡¶¨‡ßç‡¶¶‡ßÅ‡¶≤ ‡¶ï‡¶∞‡¶ø‡¶Æ", "address": "‡ß™‡ß´‡ß¨ ‡¶®‡¶ø‡¶â ‡¶Æ‡¶æ‡¶∞‡ßç‡¶ï‡ßá‡¶ü", "district": "‡¶¢‡¶æ‡¶ï‡¶æ", "upazila": "‡¶ß‡¶æ‡¶®‡¶Æ‡¶®‡ßç‡¶°‡¶ø", "mobile": "01711111002", "class_name": "Class 1", "id_number": "2025002"},
            {"name": "‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶∞‡¶π‡¶ø‡¶Æ", "father_name": "‡¶Ü‡¶¨‡ßç‡¶¶‡ßÅ‡¶≤‡ßç‡¶≤‡¶æ‡¶π ‡¶Ü‡¶≤ ‡¶Æ‡¶æ‡¶Æ‡ßÅ‡¶®", "address": "‡ß≠‡ßÆ‡ßØ ‡¶Æ‡¶ø‡¶∞‡¶™‡ßÅ‡¶∞", "district": "‡¶¢‡¶æ‡¶ï‡¶æ", "upazila": "‡¶Æ‡¶ø‡¶∞‡¶™‡ßÅ‡¶∞", "mobile": "01711111003", "class_name": "Class 1", "id_number": "2025003"},
            
            # Class 2 Students
            {"name": "‡¶Ü‡¶Ø‡¶º‡ßá‡¶∂‡¶æ ‡¶∏‡¶ø‡¶¶‡ßç‡¶¶‡¶ø‡¶ï‡¶æ", "father_name": "‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶á‡¶â‡¶∏‡ßÅ‡¶´", "address": "‡ßß‡ß¶‡ßß ‡¶ó‡ßÅ‡¶≤‡¶∂‡¶æ‡¶®", "district": "‡¶¢‡¶æ‡¶ï‡¶æ", "upazila": "‡¶ó‡ßÅ‡¶≤‡¶∂‡¶æ‡¶®", "mobile": "01711111004", "class_name": "Class 2", "id_number": "2025004"},
            {"name": "‡¶â‡¶Æ‡¶∞ ‡¶´‡¶æ‡¶∞‡ßÅ‡¶ï", "father_name": "‡¶Ü‡¶π‡¶Æ‡ßá‡¶¶ ‡¶π‡ßã‡¶∏‡ßá‡¶®", "address": "‡ß®‡ß¶‡ß® ‡¶¨‡¶®‡¶æ‡¶®‡ßÄ", "district": "‡¶¢‡¶æ‡¶ï‡¶æ", "upazila": "‡¶¨‡¶®‡¶æ‡¶®‡ßÄ", "mobile": "01711111005", "class_name": "Class 2", "id_number": "2025005"},
            {"name": "‡¶ñ‡¶æ‡¶¶‡¶ø‡¶ú‡¶æ ‡¶¨‡ßá‡¶ó‡¶Æ", "father_name": "‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶®‡ßÇ‡¶∞", "address": "‡ß©‡ß¶‡ß© ‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶æ", "district": "‡¶¢‡¶æ‡¶ï‡¶æ", "upazila": "‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶æ", "mobile": "01711111006", "class_name": "Class 2", "id_number": "2025006"},
            
            # Class 3 Students
            {"name": "‡¶Ü‡¶≤‡ßÄ ‡¶π‡¶æ‡¶∏‡¶æ‡¶®", "father_name": "‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶∏‡¶æ‡¶≤‡¶ø‡¶Æ", "address": "‡ß™‡ß¶‡ß™ ‡¶Æ‡¶§‡¶ø‡¶ù‡¶ø‡¶≤", "district": "‡¶¢‡¶æ‡¶ï‡¶æ", "upazila": "‡¶Æ‡¶§‡¶ø‡¶ù‡¶ø‡¶≤", "mobile": "01711111007", "class_name": "Class 3", "id_number": "2025007"},
            {"name": "‡¶ú‡¶Ø‡¶º‡¶®‡¶¨ ‡¶Ü‡¶ï‡ßç‡¶§‡¶æ‡¶∞", "father_name": "‡¶Ü‡¶¨‡ßç‡¶¶‡ßÅ‡¶∞ ‡¶∞‡¶π‡¶Æ‡¶æ‡¶®", "address": "‡ß´‡ß¶‡ß´ ‡¶∞‡¶Æ‡¶®‡¶æ", "district": "‡¶¢‡¶æ‡¶ï‡¶æ", "upazila": "‡¶∞‡¶Æ‡¶®‡¶æ", "mobile": "01711111008", "class_name": "Class 3", "id_number": "2025008"},
            {"name": "‡¶á‡¶¨‡ßç‡¶∞‡¶æ‡¶π‡¶ø‡¶Æ ‡¶ñ‡¶æ‡¶®", "father_name": "‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶ï‡¶æ‡¶Æ‡¶æ‡¶≤", "address": "‡ß¨‡ß¶‡ß¨ ‡¶§‡ßá‡¶ú‡¶ó‡¶æ‡¶Å‡¶ì", "district": "‡¶¢‡¶æ‡¶ï‡¶æ", "upazila": "‡¶§‡ßá‡¶ú‡¶ó‡¶æ‡¶Å‡¶ì", "mobile": "01711111009", "class_name": "Class 3", "id_number": "2025009"},
            
            # Class 4 Students
            {"name": "‡¶π‡¶æ‡¶´‡¶∏‡¶æ ‡¶ñ‡¶æ‡¶§‡ßÅ‡¶®", "father_name": "‡¶Ü‡¶π‡¶Æ‡ßá‡¶¶ ‡¶Ü‡¶¨‡ßç‡¶¶‡ßÅ‡¶≤‡ßç‡¶≤‡¶æ‡¶π", "address": "‡ß≠‡ß¶‡ß≠ ‡¶™‡¶≤‡ßç‡¶ü‡¶®", "district": "‡¶¢‡¶æ‡¶ï‡¶æ", "upazila": "‡¶™‡¶≤‡ßç‡¶ü‡¶®", "mobile": "01711111010", "class_name": "Class 4", "id_number": "2025010"},
            {"name": "‡¶∏‡¶æ‡¶≤‡¶ø‡¶Æ ‡¶â‡¶¶‡ßç‡¶¶‡¶ø‡¶®", "father_name": "‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶∞‡¶´‡¶ø‡¶ï", "address": "‡ßÆ‡ß¶‡ßÆ ‡¶®‡¶æ‡¶ú‡¶ø‡¶∞‡¶æ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞", "district": "‡¶¢‡¶æ‡¶ï‡¶æ", "upazila": "‡¶§‡ßá‡¶ú‡¶ó‡¶æ‡¶Å‡¶ì", "mobile": "01711111011", "class_name": "Class 4", "id_number": "2025011"},
            {"name": "‡¶Æ‡¶∞‡¶ø‡¶Ø‡¶º‡¶Æ ‡¶∏‡ßÅ‡¶≤‡¶§‡¶æ‡¶®‡¶æ", "father_name": "‡¶Ü‡¶¨‡ßç‡¶¶‡ßÅ‡¶≤ ‡¶π‡¶æ‡¶Æ‡¶ø‡¶¶", "address": "‡ßØ‡ß¶‡ßØ ‡¶ï‡¶æ‡¶ú‡ßÄ‡¶™‡¶æ‡¶°‡¶º‡¶æ", "district": "‡¶¢‡¶æ‡¶ï‡¶æ", "upazila": "‡¶Æ‡¶ø‡¶∞‡¶™‡ßÅ‡¶∞", "mobile": "01711111012", "class_name": "Class 4", "id_number": "2025012"},
            
            # Class 5 Students
            {"name": "‡¶ì‡¶∏‡¶Æ‡¶æ‡¶® ‡¶ó‡¶®‡¶ø", "father_name": "‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶á‡¶¨‡ßç‡¶∞‡¶æ‡¶π‡¶ø‡¶Æ", "address": "‡ßß‡ßß‡ß¶ ‡¶Æ‡¶æ‡¶≤‡¶ø‡¶¨‡¶æ‡¶ó", "district": "‡¶¢‡¶æ‡¶ï‡¶æ", "upazila": "‡¶∞‡¶Æ‡¶®‡¶æ", "mobile": "01711111013", "class_name": "Class 5", "id_number": "2025013"},
            {"name": "‡¶∏‡ßÅ‡¶Æ‡¶æ‡¶á‡¶Ø‡¶º‡¶æ ‡¶ñ‡¶æ‡¶®", "father_name": "‡¶Ü‡¶π‡¶Æ‡ßá‡¶¶ ‡¶π‡¶æ‡¶ï‡¶ø‡¶Æ", "address": "‡ßß‡ß®‡ßß ‡¶Æ‡¶ó‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞", "district": "‡¶¢‡¶æ‡¶ï‡¶æ", "upazila": "‡¶∞‡¶Æ‡¶®‡¶æ", "mobile": "01711111014", "class_name": "Class 5", "id_number": "2025014"},
            {"name": "‡¶Ü‡¶¨‡ßç‡¶¶‡ßÅ‡¶∞ ‡¶∞‡¶π‡¶ø‡¶Æ", "father_name": "‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶∏‡¶æ‡¶¶‡¶ø‡¶ï", "address": "‡ßß‡ß©‡ß® ‡¶¨‡¶æ‡¶°‡ßç‡¶°‡¶æ", "district": "‡¶¢‡¶æ‡¶ï‡¶æ", "upazila": "‡¶¨‡¶æ‡¶°‡ßç‡¶°‡¶æ", "mobile": "01711111015", "class_name": "Class 5", "id_number": "2025015"}
        ]
        
        # Clear existing students (optional - only if you want fresh data)
        print("Checking existing students...")
        existing_count = Student.query.count()
        print(f"Found {existing_count} existing students")
        
        # Add new students
        added_count = 0
        for student_data in sample_students:
            # Check if student already exists
            existing_student = Student.query.filter_by(id_number=student_data['id_number']).first()
            if not existing_student:
                student = Student(
                    name=student_data['name'],
                    father_name=student_data['father_name'],
                    address=student_data['address'],
                    district=student_data['district'],
                    upazila=student_data['upazila'],
                    mobile=student_data['mobile'],
                    class_name=student_data['class_name'],
                    id_number=student_data['id_number']
                )
                db.session.add(student)
                added_count += 1
                print(f"Adding: {student_data['name']} - {student_data['class_name']}")
            else:
                print(f"Student {student_data['name']} already exists, skipping...")
        
        db.session.commit()
        
        # Print summary
        total_students = Student.query.filter_by(is_active=True).count()
        print(f"\n‚úÖ Database populated successfully!")
        print(f"üìä Added {added_count} new students")
        print(f"üë• Total active students: {total_students}")
        
        # Show students by class
        for class_num in range(1, 6):
            class_name = f"Class {class_num}"
            count = Student.query.filter_by(class_name=class_name, is_active=True).count()
            print(f"   üìö {class_name}: {count} students")

if __name__ == "__main__":
    populate_sample_data()
